{"version":3,"sources":["hooks/useCounter.ts","hooks/useHeavyEvaluations.ts","components/heavy-component/heavy-component.tsx","hooks/useShouldRender.ts","components/app/app.component.tsx","components/menu/menu.component.tsx","reportWebVitals.ts","index.tsx","components/app/app.module.css"],"names":["useCounter","init","useRef","defaultProps","duration","withLog","HeavyComponent","heavyResult","props","rerender","useState","targetTime","Date","now","counter","isDone","useEffect","console","log","current","setTimeout","useHeavyEvaluations","deps","isDepsResolved","every","dep","shouldRender","setShouldRender","useShouldRender","App","className","styles","app","header","main","content","path","component","footer","StyledLinik","styled","Link","Menu","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById","module","exports"],"mappings":"oNAEaA,EAAa,eAACC,EAAD,uDAAQ,EAAR,OAAcC,iBAAOD,ICGzCE,EAAe,CAAEC,SAAU,EAAGC,SAAS,G,OCHhCC,EAAiB,WAC7B,IAAMC,EDIkC,WAA2B,IAA1BC,EAAyB,uDAAjBL,EAAiB,6BAC/BA,GAAiBK,GAA5CJ,EAD0D,EAC1DA,SAAUC,EADgD,EAChDA,QACZI,EAAWC,oBAAS,GACpBC,EAAaD,mBAASE,KAAKC,MAAmB,IAAXT,GAAiB,GACpDU,EAAUd,IACVe,EAAS,GAAKH,KAAKC,MAAQF,EASjC,OAPAK,qBAAU,WACLD,IACAV,GAASY,QAAQC,IAAI,2BAA4BJ,EAAQK,SAE7DC,YAAW,kBAAMX,EAAS,IAAIA,EAAS,UACrC,CAACA,EAAUM,EAAQD,EAAST,IAExB,kBAAMU,GClBOM,CAAoB,CAAEjB,SAAU,IAC9CU,EAAUd,EAAW,GAG3B,OCF8B,WAA4B,IAAD,uBAAvBsB,EAAuB,yBAAvBA,EAAuB,gBACzD,IAAMC,EAAiBD,EAAKE,OAAM,SAACC,GAAD,MAAyB,mBAARA,EAAoBA,EAAMA,OADpB,EAEjBf,mBAAkBa,GAFD,mBAElDG,EAFkD,KAEpCC,EAFoC,KAQzD,OAJKD,GAAgBH,GACpBI,GAAgB,GAGVD,EDRcE,CAAgBrB,IAInC,8BACC,4DAA+BO,EAAQK,c,uBEN9BU,EAAM,kBAClB,sBAAKC,UAAWC,IAAOC,IAAvB,UACC,wBAAQF,UAAWC,IAAOE,OAA1B,SACC,8CAED,uBAAMH,UAAWC,IAAOG,KAAxB,UACC,gCACC,cAAC,EAAD,MAED,yBAASJ,UAAWC,IAAOI,QAA3B,SACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAW/B,IAC1C,cAAC,IAAD,CAAO8B,KAAK,cAIf,wBAAQN,UAAWC,IAAOO,a,gBCjBtBC,EAAcC,YAAOC,IAAPD,CAAH,uEAKJE,EAAO,kBACnB,gCACC,cAACH,EAAD,CAAaI,GAAG,IAAhB,+BACA,cAACJ,EAAD,CAAaI,GAAG,mBAAhB,iCCGaC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAQC,SAAUC,eAAlB,SACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAMzBf,K,kBClBAgB,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,qB","file":"static/js/main.6e5ba980.chunk.js","sourcesContent":["import { useRef } from 'react'\n\nexport const useCounter = (init = 0) => useRef(init)\n","import { useState, useEffect } from 'react'\nimport { useCounter } from './useCounter'\n\ntype Hook = (props?: { duration?: number; withLog?: boolean }) => () => boolean\n\nconst defaultProps = { duration: 1, withLog: true }\n\nexport const useHeavyEvaluations: Hook = (props = defaultProps) => {\n\tconst { duration, withLog } = { ...defaultProps, ...props }\n\tconst rerender = useState(false)\n\tconst targetTime = useState(Date.now() + duration * 1000)[0]\n\tconst counter = useCounter()\n\tconst isDone = 0 <= Date.now() - targetTime\n\n\tuseEffect(() => {\n\t\tif (isDone) return\n\t\tif (withLog) console.log('useHeavyEvaluations : ', ++counter.current)\n\n\t\tsetTimeout(() => rerender[1](!rerender[0]))\n\t}, [rerender, isDone, counter, withLog])\n\n\treturn () => isDone\n}\n","import { useHeavyEvaluations, useShouldRender, useCounter } from 'hooks'\n\nexport const HeavyComponent = () => {\n\tconst heavyResult = useHeavyEvaluations({ duration: 3 })\n\tconst counter = useCounter(0)\n\tconst shouldRender = useShouldRender(heavyResult)\n\n\treturn (\n\t\tshouldRender && (\n\t\t\t<div>\n\t\t\t\t<p>HeavyComponent counter = {++counter.current}</p>\n\t\t\t</div>\n\t\t)\n\t)\n}\n","import { useState } from 'react'\n\ntype Dependency = boolean | (() => boolean)\ntype Dependencies = Dependency[]\n\nexport const useShouldRender = (...deps: Dependencies) => {\n\tconst isDepsResolved = deps.every((dep) => (typeof dep === 'boolean' ? dep : dep()))\n\tconst [shouldRender, setShouldRender] = useState<Boolean>(isDepsResolved)\n\n\tif (!shouldRender && isDepsResolved) {\n\t\tsetShouldRender(true)\n\t}\n\n\treturn shouldRender\n}\n","import { Switch, Route } from 'react-router-dom'\nimport { HeavyComponent, Menu } from 'components'\nimport styles from './app.module.css'\n\nexport const App = () => (\n\t<div className={styles.app}>\n\t\t<header className={styles.header}>\n\t\t\t<p>React Hooks</p>\n\t\t</header>\n\t\t<main className={styles.main}>\n\t\t\t<aside>\n\t\t\t\t<Menu />\n\t\t\t</aside>\n\t\t\t<section className={styles.content}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/useShouldRender\" component={HeavyComponent} />\n\t\t\t\t\t<Route path=\"/\" />\n\t\t\t\t</Switch>\n\t\t\t</section>\n\t\t</main>\n\t\t<footer className={styles.footer} />\n\t</div>\n)\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLinik = styled(Link)`\n\ttext-decoration: none;\n\tcolor: wheat;\n`\n\nexport const Menu = () => (\n\t<div>\n\t\t<StyledLinik to=\"/\">Home üè°</StyledLinik>\n\t\t<StyledLinik to=\"/useShouldRender\">useShouldRender</StyledLinik>\n\t</div>\n)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport { App } from 'components'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\",\"link\":\"app_link__1e-F6\"};"],"sourceRoot":""}